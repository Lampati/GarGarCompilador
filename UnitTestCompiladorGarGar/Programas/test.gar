constantes

const M : numero = 7;
const MaxArreglo : numero = 3;
variables

var N, S : numero;


procedimiento PROC1()
var A : numero;
var B : numero;
comenzar
  B = M;
  A = B / 2;
  mientras (B > 0) hacer

    si (B > A) entonces
      A = A + 1;
    finsi;

    Mostrar ('Visualizacion ' , B , ' ' , A, verdadero );
    B = B - 1;

  finmientras;
finproc;



procedimiento PROC2(R : numero)

var W11, Y : numero;
var W12, Q, S : numero;
var mensaje : texto;
var exito : booleano;
var Procesamiento: booleano;
comenzar

  mensaje = 'operacion';
  S = (S + M) * 2;
  Q = 1;
  Y = 16;
  leer W11;  
  W12 = (W11 * 2 + S);

  mientras ((W12 - 2) <= R + S) hacer
    W12 = W12 * 2;
  finmientras;

  mientras (W12 + M > Y / 2) hacer
    Q = Q * 2;
    W12 = W12 / 2;
    si (W12 <= R) entonces
      R = R - W12;
      Q = Q + 1;
    finsi;
  finmientras;

  exito = (Q < 10);
  exito = ((Q < 10) and (R > 0));
  exito = !(!(Q < 10) and (R > 0));
  Procesamiento = falso and (Q < 10) or verdadero and (R > 0);

  si (exito = verdadero) entonces
    mensaje  = mensaje & ' ' & 'erronea';
  sino
    mensaje  = mensaje & ' ' & 'satisfactoria';
  finsi;


finproc;

funcion VALABSOLUTO(T: numero) : numero
var N: numero;
comenzar
  si (T > 0) entonces
    N = T;
  sino
    N = T * -1;
  finsi;
finfunc N;


procedimiento SALIDA(A : arreglo[MaxArreglo]  de numero)
var I : numero;
comenzar
  I = 1;

  mientras (I <= MaxArreglo) hacer
    Mostrar(A[I]);
	I = I + 1;
  finmientras;


finproc;



procedimiento PRINCIPAL()
var X: numero;
var A: arreglo[MaxArreglo] de numero;
var B : booleano;
comenzar
	
	X = 6 + 10 - 10 - 10 ;
	X = 100 - X - (X);
  llamar PROC1();
  
  X = rcoseno(45);
  X = rseno(45);
  X = rtangente(45);
  X = coseno(45);
  X = seno(45);
  X = tangente(45);
  X = PI();
  X = ValAbs(45);
  X = raiz(9,2);
  X = Potencia(9,2);
  
  B = espar(2);
  B = esimpar(1);
  
  x = redondear(5.5);
  x = Truncar(5.5);
  
  A[1] = VALABSOLUTO(5);
  A[2] = VALABSOLUTO(-2);
  A[3] = VALABSOLUTO(55 * -1);
  
  llamar SALIDA(A); 


finproc;


